'------------------------------------------------------------------------------
' <auto-generated>
'    This code was generated from a template.
'
'    Manual changes to this file may cause unexpected behavior in your application.
'    Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Objects
Imports System.Data.Objects.DataClasses
Imports System.Linq

Partial Public Class TextileraEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=TextileraEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Property Categorias() As DbSet(Of Categorias)
    Public Property DetalleEstilosOperaciones() As DbSet(Of DetalleEstilosOperaciones)
    Public Property Estilos() As DbSet(Of Estilos)
    Public Property Operaciones() As DbSet(Of Operaciones)
    Public Property sysdiagrams() As DbSet(Of sysdiagrams)
    Public Property Usuarios() As DbSet(Of Usuarios)
    Public Property BalanceosEstilos() As DbSet(Of BalanceosEstilos)
    Public Property Maquinas() As DbSet(Of Maquinas)
    Public Property OperacionesBalanceos() As DbSet(Of OperacionesBalanceos)

    Public Overridable Function spInsertarUsuario(nom As String, ape As String, fna As Nullable(Of Date), ce As String, usu As String, con As String, est As Nullable(Of Boolean)) As Integer
        Dim nomParameter As ObjectParameter = If(nom IsNot Nothing, New ObjectParameter("nom", nom), New ObjectParameter("nom", GetType(String)))

        Dim apeParameter As ObjectParameter = If(ape IsNot Nothing, New ObjectParameter("ape", ape), New ObjectParameter("ape", GetType(String)))

        Dim fnaParameter As ObjectParameter = If(fna.HasValue, New ObjectParameter("fna", fna), New ObjectParameter("fna", GetType(Date)))

        Dim ceParameter As ObjectParameter = If(ce IsNot Nothing, New ObjectParameter("ce", ce), New ObjectParameter("ce", GetType(String)))

        Dim usuParameter As ObjectParameter = If(usu IsNot Nothing, New ObjectParameter("usu", usu), New ObjectParameter("usu", GetType(String)))

        Dim conParameter As ObjectParameter = If(con IsNot Nothing, New ObjectParameter("con", con), New ObjectParameter("con", GetType(String)))

        Dim estParameter As ObjectParameter = If(est.HasValue, New ObjectParameter("est", est), New ObjectParameter("est", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsertarUsuario", nomParameter, apeParameter, fnaParameter, ceParameter, usuParameter, conParameter, estParameter)
    End Function

    Public Overridable Function spInsertarCategoria(nombreCategoria As String, estado As Nullable(Of Boolean)) As Integer
        Dim nombreCategoriaParameter As ObjectParameter = If(nombreCategoria IsNot Nothing, New ObjectParameter("NombreCategoria", nombreCategoria), New ObjectParameter("NombreCategoria", GetType(String)))

        Dim estadoParameter As ObjectParameter = If(estado.HasValue, New ObjectParameter("Estado", estado), New ObjectParameter("Estado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsertarCategoria", nombreCategoriaParameter, estadoParameter)
    End Function

    Public Overridable Function spInsertarEstilo(estiloId As String, fKCategoriaId As Nullable(Of Long), estado As Nullable(Of Boolean)) As Integer
        Dim estiloIdParameter As ObjectParameter = If(estiloId IsNot Nothing, New ObjectParameter("EstiloId", estiloId), New ObjectParameter("EstiloId", GetType(String)))

        Dim fKCategoriaIdParameter As ObjectParameter = If(fKCategoriaId.HasValue, New ObjectParameter("FKCategoriaId", fKCategoriaId), New ObjectParameter("FKCategoriaId", GetType(Long)))

        Dim estadoParameter As ObjectParameter = If(estado.HasValue, New ObjectParameter("Estado", estado), New ObjectParameter("Estado", GetType(Boolean)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spInsertarEstilo", estiloIdParameter, fKCategoriaIdParameter, estadoParameter)
    End Function

End Class
